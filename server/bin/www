#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const mongoose = require('mongoose')

const config = require('../config')
const app = require('../app')
const checkVersion = require('../../build/check-versions')

const Group = require('../models/group')
const Socket = require('../models/socket')
checkVersion()

const createDirectory = (directoryPath) => {
  if (!fs.existsSync(directoryPath)) {
    fs.mkdirSync(directoryPath)
  }
}

const port = config.port

mongoose.Promise = Promise

mongoose.connect(config.mongodb, async err => {
  if (err) {
    console.log(`
      ---------------------
      connect database error
    `)
    return process.exit(1)
  }

  const group = await Group.findOne({ isDefault: true })
  if (!group) {
    const defaultGroup = await Group.create({
      name: 'dochat',
      avatar: 'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=4048446268,4268796217&' +
          'fm=27&gp=0.jpg',
      intro: 'freedom~~~',
      isDefault: true,
      pinyin: 'dochat'
    })

    if (!defaultGroup) {
      console.error('create default group fail');
      return process.exit(1);
    }
  }

  createDirectory(path.join(__dirname, '../../public'))

  app.listen(port, async () => {
    await Socket.remove()
    console.log(`> server listen on http://localhost:${port}`)
  })
})
